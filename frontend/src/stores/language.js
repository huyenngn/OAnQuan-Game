import { defineStore } from "pinia";
import { ref } from "vue";

const DEFAULT_BACKEND_URL = "http://127.0.0.1:8080";
let GLOBAL_SERVERS = [
    {
        long: -120,
        url: import.meta.env.VITE_BACKEND_NA,
    },
    {
        long: 5,
        url: import.meta.env.VITE_BACKEND_EU,
    },
    {
        long: 120,
        url: import.meta.env.VITE_BACKEND_AS,
    },
].filter((server) => server.url);

const LANGUAGES = ["en", "de", "vn"];

export const useLanguage = defineStore("language", () => {
    const language = ref("en");
    const BACKEND_URL = ref("");
    const country = ref("xx");
    const isBackendReady = ref(false);

    async function warmUpBackend(long) {
        while (true) {
            if (GLOBAL_SERVERS.length === 0) {
                BACKEND_URL.value = DEFAULT_BACKEND_URL;
                break;
            }
            GLOBAL_SERVERS = GLOBAL_SERVERS.sort(
                (a, b) => Math.abs(a.long - long) - Math.abs(b.long - long)
            );
            BACKEND_URL.value = GLOBAL_SERVERS.shift().url;
            try {
                await fetch(BACKEND_URL.value, { method: "GET" });
                break;
            } catch (error) {}
        }
        console.log("Warmed up backend:", BACKEND_URL.value);
        isBackendReady.value = true;
    }

    async function fetchIpData() {
        try {
            const response = await fetch("https://ipapi.co/json/");
            const data = await response.json();
            warmUpBackend(data.longitude);
            country.value = data.country_code.toLowerCase();
            if (LANGUAGES.includes(country.value)) {
                language.value = country.value;
            }
        } catch (error) {
            console.error("Error fetching country code:", error);
        }
    }

    function getText(key) {
        try {
            return text[language.value][key];
        } catch (error) {
            return text["en"][key];
        }
    }

    function getTutorial() {
        try {
            return tutorial[language.value];
        } catch (error) {
            return tutorial["en"];
        }
    }

    const text = {
        en: {
            credit: "Created by",
            privacy: "Privacy Policy",
            newGame: "New Game",
            easy: "Easy",
            normal: "Normal",
            hard: "Hard",
            leaderboard: "Leaderboard",
            tutorial: "Tutorial",
            campaign: "Campaign",
            back: "Back",
            draw: "It's a draw! ü§ù",
            win: "You win! üéâ",
            lose: "You lose! üò¢",
            turn: "Your turn!",
            waiting: "Opponent is playing...",
            loading: "Loading...",
            week: "Week",
            month: "Month",
            ytd: "Year to Date",
            all: "All",
            allTime: "All Time",
            congrats: "Congratulations!",
            rankPre: "You are ranked",
            rankMain: "for",
            rankPost: "mode!",
            noRank: "You are the winner!",
            unknown: "Unknown",
            save: "Save",
            privacyLink:
                "https://www.freeprivacypolicy.com/live/aede0996-f435-4b28-a7fa-8eed29173886",
        },
        vn: {
            credit: "T·∫°o b·ªüi",
            privacy: "Ch√≠nh s√°ch B·∫£o m·∫≠t",
            newGame: "Tr√≤ ch∆°i m·ªõi",
            easy: "D·ªÖ",
            normal: "Trung b√¨nh",
            hard: "Kh√≥",
            leaderboard: "B·∫£ng x·∫øp h·∫°ng",
            tutorial: "H∆∞·ªõng d·∫´n",
            campaign: "Chi·∫øn d·ªãch",
            back: "Quay l·∫°i",
            draw: "H√≤a! ü§ù",
            win: "Th·∫Øng! üéâ",
            lose: "Thua! üò¢",
            turn: "L∆∞·ª£t c·ªßa b·∫°n!",
            waiting: "ƒê·ªëi th·ªß ƒëang ch∆°i...",
            loading: "ƒêang t·∫£i...",
            week: "Tu·∫ßn",
            month: "Th√°ng",
            ytd: "NƒÉm nay",
            all: "T·∫•t c·∫£",
            allTime: "T·∫•t c·∫£ th·ªùi gian",
            congrats: "Ch√∫c m·ª´ng!",
            rankPre: "B·∫°n ƒë·ª©ng th·ª©",
            rankMain: "cho ch·∫ø ƒë·ªô",
            rankPost: "!",
            noRank: "B·∫°n l√† ng∆∞·ªùi chi·∫øn th·∫Øng!",
            unknown: "Kh√¥ng r√µ",
            save: "L∆∞u",
            privacyLink:
                "https://www-freeprivacypolicy-com.translate.goog/live/aede0996-f435-4b28-a7fa-8eed29173886?_x_tr_sl=en&_x_tr_tl=vi&_x_tr_hl=de&_x_tr_pto=wapp",
        },
        de: {
            credit: "Erstellt von",
            privacy: "Datenschutzerkl√§rung",
            newGame: "Neues Spiel",
            easy: "Leicht",
            normal: "Normal",
            hard: "Schwer",
            leaderboard: "Rangliste",
            tutorial: "Anleitung",
            campaign: "Kampagne",
            back: "Zur√ºck",
            draw: "Unentschieden! ü§ù",
            win: "Du hast gewonnen! üéâ",
            lose: "Leider verloren! üò¢",
            turn: "Du bist dran!",
            waiting: "Gegner ist am Zug...",
            loading: "Laden...",
            week: "Woche",
            month: "Monat",
            ytd: "Dieses Jahr",
            all: "Alle",
            allTime: "Gesamt",
            congrats: "Herzlichen Gl√ºckwunsch!",
            rankPre: "Du bist auf Platz",
            rankMain: "im",
            rankPost: "Modus!",
            noRank: "Du bist der Gewinner!",
            unknown: "Unbekannt",
            save: "Speichern",
            privacyLink:
                "https://www-freeprivacypolicy-com.translate.goog/live/aede0996-f435-4b28-a7fa-8eed29173886?_x_tr_sl=en&_x_tr_tl=de&_x_tr_hl=de&_x_tr_pto=wapp",
        },
    };

    const tutorial = {
        en: [
            {
                title: "The √î ƒÇn Quan board",
                text: "The √î ƒÇn Quan board consists of 10 'd√¢n' fields, 5 on each side, and 2 larger 'quan' fields at both ends. Understanding the layout helps you plan your moves effectively.",
            },
            {
                title: "Move your seeds",
                text: "On your turn, pick up all the seeds from one of your 'd√¢n' fields and distribute them in either direction, one by one. Once you've placed all the seeds, you pick up the seeds from the next field and distribute them in the same way. This continues until you capture or reach a 'quan' field.",
            },
            {
                title: "Capture seeds",
                text: "If the last seed you place lands in front of an empty field, you capture all the seeds in the opposite field. If the opposite field is also empty, you lose your turn. Capturing seeds key to winning.",
            },
            {
                title: "Plan ahead",
                text: "Try to avoid leaving your seeds in a position where your opponent can easily capture them. Instead, aim to capture your opponent's seeds and the 'quan' fields to gain an advantage. The player with the most seeds at the end of the game wins.",
            },
            {
                title: "Stay defensive",
                text: "Avoid leaving a full field directly behind an empty one to prevent your opponent from capturing a lot of seeds in one turn.",
            },
            {
                title: "Win the game",
                text: "The game ends when all the 'quan' fields are empty. Seeds that remain on either side of the board go to the respective player. The player with the most seeds wins the game.",
            },
            {
                title: "Control the Quan",
                text: "Capturing seeds in the 'quan' fields can give you a big advantage. But be careful, if all the quan fields get captured, while you're behind, you lose the game.",
            },
            {
                title: "Chain capture",
                text: "If you capture seeds and the next field is empty, you can continue capturing seeds from the next field. Plan ahead and set up chain captures to gain an advantage.",
            },
        ],
        vn: [
            {
                title: "B√†n c·ªù √î ƒÇn Quan",
                text: "B√†n c·ªù √î ƒÇn Quan bao g·ªìm 10 √¥ 'd√¢n', 5 ·ªü m·ªói b√™n, v√† 2 √¥ 'quan' l·ªõn ·ªü hai ƒë·∫ßu. Hi·ªÉu v·ªã tr√≠ gi√∫p b·∫°n l√™n k·∫ø ho·∫°ch di chuy·ªÉn hi·ªáu qu·∫£.",
            },
            {
                title: "Di chuy·ªÉn h·∫°t",
                text: "L∆∞·ª£t c·ªßa b·∫°n, h√£y nh·∫∑t t·∫•t c·∫£ h·∫°t t·ª´ m·ªôt √¥ 'd√¢n' c·ªßa b·∫°n v√† ph√¢n ph·ªëi ch√∫ng theo b·∫•t k·ª≥ h∆∞·ªõng n√†o, t·ª´ng h·∫°t m·ªôt. Khi b·∫°n ƒë√£ ƒë·∫∑t t·∫•t c·∫£ h·∫°t, b·∫°n nh·∫∑t h·∫°t t·ª´ √¥ ti·∫øp theo v√† ph√¢n ph·ªëi ch√∫ng theo c√°ch t∆∞∆°ng t·ª±. Qu√° tr√¨nh n√†y ti·∫øp t·ª•c cho ƒë·∫øn khi b·∫°n b·∫Øt ho·∫∑c ƒë·∫øn √¥ 'quan'.",
            },
            {
                title: "B·∫Øt h·∫°t",
                text: "N·∫øu h·∫°t cu·ªëi c√πng b·∫°n ƒë·∫∑t r∆°i tr∆∞·ªõc m·ªôt √¥ tr·ªëng, b·∫°n b·∫Øt t·∫•t c·∫£ h·∫°t trong √¥ ƒë·ªëi di·ªán. N·∫øu √¥ ƒë·ªëi di·ªán c≈©ng tr·ªëng, b·∫°n m·∫•t l∆∞·ª£t. B·∫Øt h·∫°t quan tr·ªçng ƒë·ªÉ chi·∫øn th·∫Øng.",
            },
            {
                title: "L√™n k·∫ø ho·∫°ch",
                text: "H√£y c·ªë g·∫Øng tr√°nh ƒë·ªÉ l·∫°i h·∫°t c·ªßa b·∫°n ·ªü v·ªã tr√≠ m√† ƒë·ªëi th·ªß d·ªÖ d√†ng b·∫Øt ch√∫ng. Thay v√†o ƒë√≥, h√£y c·ªë g·∫Øng b·∫Øt h·∫°t c·ªßa ƒë·ªëi th·ªß v√† √¥ 'quan' ƒë·ªÉ c√≥ l·ª£i th·∫ø. Ng∆∞·ªùi ch∆°i c√≥ nhi·ªÅu h·∫°t nh·∫•t ·ªü cu·ªëi tr√≤ ch∆°i s·∫Ω th·∫Øng.",
            },
            {
                title: "B·∫£o v·ªá",
                text: "Tr√°nh ƒë·ªÉ l·∫°i m·ªôt √¥ ƒë·∫ßy ngay ph√≠a sau m·ªôt √¥ tr·ªëng ƒë·ªÉ ngƒÉn ƒë·ªëi th·ªß c·ªßa b·∫°n b·∫Øt nhi·ªÅu h·∫°t trong m·ªôt l∆∞·ª£t.",
            },
            {
                title: "Chi·∫øn th·∫Øng",
                text: "Tr√≤ ch∆°i k·∫øt th√∫c khi t·∫•t c·∫£ c√°c √¥ 'quan' tr·ªëng. H·∫°t c√≤n l·∫°i ·ªü m·ªói b√™n c·ªßa b√†n c·ªù s·∫Ω thu·ªôc v·ªÅ ng∆∞·ªùi ch∆°i t∆∞∆°ng ·ª©ng. Ng∆∞·ªùi ch∆°i c√≥ nhi·ªÅu h·∫°t nh·∫•t s·∫Ω th·∫Øng tr√≤ ch∆°i.",
            },
            {
                title: "Ki·ªÉm so√°t Quan",
                text: "B·∫Øt h·∫°t trong c√°c √¥ 'quan' c√≥ th·ªÉ mang l·∫°i l·ª£i th·∫ø l·ªõn cho b·∫°n. Nh∆∞ng h√£y c·∫©n th·∫≠n, n·∫øu t·∫•t c·∫£ c√°c √¥ quan b·ªã b·∫Øt, trong khi b·∫°n ƒëang ·ªü ph√≠a sau, b·∫°n s·∫Ω thua tr√≤ ch∆°i.",
            },
            {
                title: "B·∫Øt chu·ªói",
                text: "N·∫øu b·∫°n b·∫Øt h·∫°t v√† √¥ ti·∫øp theo tr·ªëng, b·∫°n c√≥ th·ªÉ ti·∫øp t·ª•c b·∫Øt h·∫°t t·ª´ √¥ ti·∫øp theo. L√™n k·∫ø ho·∫°ch v√† thi·∫øt l·∫≠p chu·ªói b·∫Øt ƒë·ªÉ c√≥ l·ª£i th·∫ø.",
            },
        ],
        de: [
            {
                title: "Das √î ƒÇn Quan-Brett",
                text: "Das √î ƒÇn Quan-Brett besteht aus 10 'd√¢n'-Feldern, 5 auf jeder Seite, und 2 gr√∂√üeren 'quan'-Feldern an beiden Enden. Das Verst√§ndnis des Layouts hilft dir, deine Z√ºge effektiv zu planen.",
            },
            {
                title: "Verteile deine Steine",
                text: "Nimm alle Steine aus eines deiner 'd√¢n'-Felder und verteile sie in eine Richtung, einen nach dem anderen. Sobald du alle Steine platziert hast, nimmst du die Steine vom n√§chsten Feld auf und verteilst sie auf die gleiche Weise. Mache so weiter, bis du ein 'quan'-Feld erreichst oder Steine einnehmen kannst.",
            },
            {
                title: "Steine einnehmen",
                text: "Wenn der letzte Stein, den du platzierst, vor einem leeren Feld landet, nimmst du alle Steine im gegen√ºberliegenden Feld ein. Wenn das gegen√ºberliegende Feld auch leer ist, ist dein Gegner am Zug.",
            },
            {
                title: "Plane voraus",
                text: "Vermeide, deine Steine in einer Position zu lassen, in der dein Gegner sie leicht einnehmen kann. Versuche stattdessen, die Steine deines Gegners und die 'quan'-Felder einzunehmen. Der Spieler mit den meisten Steinen am Ende des Spiels gewinnt.",
            },
            {
                title: "Spiele defensiv",
                text: "Vermeide es, ein volles Feld direkt hinter einem leeren zu lassen, um zu verhindern, dass dein Gegner viele Steine auf einmal einnimmt.",
            },
            {
                title: "Gewinne das Spiel",
                text: "Das Spiel endet, wenn alle 'quan'-Felder leer sind. Die Steine, die auf beiden Seiten des Bretts verbleiben, gehen an die jeweiligen Spieler. Der Spieler mit den meisten Steinen gewinnt das Spiel.",
            },
            {
                title: "Kontrolliere die Quan",
                text: "Das Einnehmen von Steinen in den 'quan'-Feldern kann dir einen gro√üen Vorteil verschaffen. Aber sei vorsichtig, wenn alle Quan-Felder eingenommen werden, w√§hrend du zur√ºckliegst, verlierst du das Spiel.",
            },
            {
                title: "Kettenf√§nge",
                text: "Wenn du Steine einnimmst und das n√§chste Feld leer ist, kannst du weiter Steine vom n√§chsten Feld einnehmen. Plane voraus und richte Kettenf√§nge ein, um einen Vorteil zu erlangen.",
            },
        ],
    };

    return {
        language,
        BACKEND_URL,
        country,
        getText,
        fetchIpData,
        isBackendReady,
        getTutorial,
    };
});
