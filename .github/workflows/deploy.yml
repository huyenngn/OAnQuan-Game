name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build and push backend Docker image
        run: |
          docker build -t huyenngn/backend-api -f Dockerfile .
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u huyenngn --password-stdin
          docker push huyenngn/backend-api

      - name: Build and push frontend Docker image
        run: |
          docker build \
            --build-arg VITE_SUPABASE_URL=${{ secrets.VITE_SUPABASE_URL }} \
            --build-arg VITE_SUPABASE_KEY=${{ secrets.VITE_SUPABASE_KEY }} \
            --build-arg VITE_BACKEND_NA=${{ secrets.VITE_BACKEND_NA }} \
            --build-arg VITE_BACKEND_EU=${{ secrets.VITE_BACKEND_EU }} \
            --build-arg VITE_BACKEND_AS=${{ secrets.VITE_BACKEND_AS }} \
            -t huyenngn/frontend -f frontend/Dockerfile ./frontend
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u huyenngn --password-stdin
          docker push huyenngn/frontend

  deploy:
    runs-on: ubuntu-latest
    needs: build
    env:
      RENDER_EU_API_KEY: ${{ secrets.RENDER_EU_API_KEY }}
      RENDER_NA_API_KEY: ${{ secrets.RENDER_NA_API_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy services to Render
        run: |
          deploy_service() {
            local service_id=$1
            local api_key=$2
            echo "Deploying service with ID: $service_id"
            response=$(curl -s -o /dev/null -w "%{http_code}" -X POST "https://api.render.com/v1/services/$service_id/deploys" \
              -H "Authorization: Bearer $api_key" \
              -H "accept: application/json" \
              -H "content-type: application/json")
            if [ "$response" -ne 201 ]; then
              echo "Deployment failed for service $service_id with status code $response"
              exit 1
            else
              echo "Deployment triggered successfully for service $service_id"
            fi
          }

          deploy_service "srv-crolg89u0jms73cb6gt0" $RENDER_EU_API_KEY  # Frontend
          deploy_service "srv-crr4erl6l47c73ccrir0" $RENDER_NA_API_KEY  # Backend NA
          deploy_service "srv-crr4kc2j1k6c73e9bn00" $RENDER_EU_API_KEY  # Backend EU
          deploy_service "srv-crr4fpo8fa8c73ekin10" $RENDER_NA_API_KEY  # Backend AS
